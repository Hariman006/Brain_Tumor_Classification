# -*- coding: utf-8 -*-
"""BrainTumor_CNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/125YylhVXzna1Dh5RFCAWzUNzxg_Ycb46
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.preprocessing.image import ImageDataGenerator

IMG_SIZE=224
BATCH_SIZE=32

train_datagen=ImageDataGenerator(rescale=1./255,validation_split=0.2)

train_generator=train_datagen.flow_from_directory(
    '/content/drive/MyDrive/Brain_Tumor/train',
    target_size=(IMG_SIZE,IMG_SIZE),
    batch_size=BATCH_SIZE,
    class_mode='binary',
    subset='training'
)

val_generator=train_datagen.flow_from_directory(
    '/content/drive/MyDrive/Brain_Tumor/test',
    target_size=(IMG_SIZE,IMG_SIZE),
    batch_size=BATCH_SIZE,
    class_mode='binary',
    subset='validation'
)

model=keras.Sequential([
    layers.Conv2D(32,(3,3),activation='relu',input_shape=(IMG_SIZE,IMG_SIZE,3)),
    layers.MaxPooling2D(2,2),
    layers.Conv2D(64,(3,3),activation='relu'),
    layers.MaxPooling2D(2,2),
    layers.Conv2D(128,(3,3),activation='relu'),
    layers.MaxPooling2D(2,2),
    layers.Flatten(),
    layers.Dense(128,activation='relu'),
    layers.Dense(1,activation='sigmoid')
])

model.summary()

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

model.fit(train_generator,epochs=5,validation_data=val_generator,batch_size=BATCH_SIZE)

model.save("/content/drive/MyDrive/Brain_Tumor/trainedone.h5")

test_image_path='/content/drive/MyDrive/Brain_Tumor/test/pred/2 no.jpeg'
img=image.load_img(test_image_path,target_size=(224,224))
plt.imshow(img)
plt.axis()
plt.show()

img_array=image.img_to_array(img)
img_array=np.expand_dims(img_array,axis=0)
img_array/=255

prediction=model(img_array)
print(prediction)

if prediction>=0.5:
  print("You Have a Brain Tumor")
else:
  print("You Dont Have a Brain Tumor")

